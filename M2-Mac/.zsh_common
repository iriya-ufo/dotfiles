# -*- shell-script -*-
##==============================
## プロンプト
##==============================
setopt prompt_subst
setopt transient_rprompt
PS_OK=$'%F{yellow}✘╹◡╹✘ %F{magenta}> %F{nomal}'
PS_NG=$'%F{red}✘>﹏<✘ %F{magenta}> %F{nomal}'
PROMPT="%0(?|${PS_OK}|${PS_NG})"
RPROMPT='[%F{green}%~%f]'

##==============================
## 履歴の設定
##==============================
HISTFILE=$HOME/.zsh_history # 履歴をファイルに保存する
HISTSIZE=100000             # メモリ内の履歴の数
SAVEHIST=100000             # 保存される履歴の数
setopt extended_history     # 履歴ファイルに時刻を記録
setopt share_history        # 履歴ファイルを逐次保存
setopt extended_glob
setopt pushd_ignore_dups
setopt auto_cd
setopt auto_pushd
setopt no_hup
setopt hist_ignore_all_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt always_last_prompt
setopt pushd_silent
setopt print_eight_bit
setopt no_list_beep
setopt no_list_types
setopt no_beep

precmd() {
    case $TERM in
        (screen|[kx]term*))
        print -nP "\e]2;%/\a"
        ;;
    esac
}

preexec() {
    case $TERM in
        (screen|[kx]term*))
        emulate -L zsh
        local -a cmd; cmd=(${(z)1})	   # Re-parse the command line
        print -n "\e]2;$cmd[1]\a"
        ;;
    esac
}

##==============================
## 補完
##==============================
autoload -U compinit ; compinit -u
# bash 用の補完スクリプトを zsh でも解釈できるようにする
autoload -U +X bashcompinit && bashcompinit

zstyle ':completion:*:default' menu select=1
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion::complete:*' use-cache 1
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([%0-9]#)*=0=01;31'
# kill で 'ps x' のリストから選択可能
zstyle ':completion:*:processes' command 'ps x'
# 補完で大文字小文字を区別しない
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

setopt list_packed        # コンパクトに補完リストを表示
setopt auto_param_slash   # ディレクトリ名の補完で末尾の / を自動的に付加し、次の補完に備える
setopt mark_dirs          # ファイル名の展開でディレクトリにマッチした場合 末尾に / を付加
setopt auto_menu          # 補完キー連打で順に補完候補を自動で補完
setopt auto_param_keys    # カッコの対応などを自動的に補完
setopt auto_resume        # サスペンド中のプロセスと同じコマンド名を実行した場合はリジューム

##==============================
## その他
##==============================
# タイトルバーの動的変更
precmd() {
[[ -t 1 ]] || return
case $TERM in
sun-cmd) print -Pn "\e]l[%~]\e\\"
 ;;
*xterm*|rxvt|(dt|k|E)term) print -Pn "\e]2;[%~]\a"
 ;;
esac
}

# zargs の利用
autoload zargs
